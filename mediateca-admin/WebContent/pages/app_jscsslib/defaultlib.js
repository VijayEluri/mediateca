/*Constants for the Digital Library System*/// This function converts a coldfusion boolean value to// a javascript booleanfunction SYS_cfToJsBool(val) {	if(val) {		val.toString().toLowerCase()=="yes"?val=true:0;		val.toString().toLowerCase()=="no"?val=false:0;	}	return val;}dlsSystem = new Object();// Launches a new page according to page typedlsSystem.launchPage = function() {	var a=arguments;	if(a.length>=3) {		var page=a[0],id=a[1],type=a[2];		switch(type) {			case "dlsExplorer": {				window.open(page,'dlsExplorer','toolbar=no,status=yes,resizable=yes');				break;			}			case "menu" :				window.location=page;				break;			case "app" :				size=(a.length>=4?a[3]:'width=376,height=439');				window.open(page,'app'+id,size);				break;			case "webfolder":				var httpFolder = document.all.behaviorSpace				httpFolder.style.behavior = "url('#default#httpFolder')";				httpFolder.navigateFrame(encodeURI(page),"_top");				break;			case "wizard" :				window.open(page,'wizard','width=530,height=415');				break;			case "manager" :				window.open('default\.cfm\?fuseaction\='+page,'manager','width=530,height=350,scrollbars=yes');				break;			case "panel" :				window.location='default\.cfm\?fuseaction\='+page;				break;		}	}}// launch help on fieldsfunction fieldHelp(field,def,inst) {		var w=window.open('','helpWindow','width=200,height=300,scrollbars=yes');		var d=w.document;		d.write('<html><head><title>DLS: QuikHelp</title></head>');		d.write('<body style="background-color:#ffffff;font-family:Verdana;font-size:8pt")>');		d.write('<h3>'+field+'</h3>');		d.write('<p><strong>Definition:</strong><br />'+def+'</p>');		d.write('<p><strong>Instructions:</strong><br />'+inst+'</p>');		d.write('<p><a href="javascript:window.close();">Close</a></p>');		d.write('</body>');		d.write('</html>');		d.close();}// get a TabBox DIV name from an inner elementfunction getTabBoxDiv(element) {	//while(element.nodeName!="DIV") {	//	element=element.parentNode;	//}	//if(element.id.substring(0,6)!='tabBox') {	//	element=getTabBoxDiv(element.parentNode);	//}	//return element;}// get a TabBox Id from a Tab Box DIV Namefunction getTabBoxId(divElement) {	alert("GET TAB BOX ID IS FISHY "+divElement);	return divElement.substring(0,divElement.length-6)}function displayStatusMsg(msgStr) { //v1.0	status=msgStr;	document.returnValue = true;}